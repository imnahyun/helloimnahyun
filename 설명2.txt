game.c

이 코드는 3개의 숫자를 맞추는 게임을 구현한 코드입니다.

먼저 main() 함수에서는 random[] 배열을 이용하여 0부터 9까지의 랜덤한 숫자 3개를 생성합니다. 
이때 중복된 숫자가 생성되지 않도록 조건문을 이용하여 중복 제거를 합니다.

다음으로 게임이 시작되면 while문을 이용하여 게임이 종료될 때까지 사용자가 입력한 숫자를 바탕으로 play_game() 함수를 호출합니다. 
이 함수에서는 먼저 strike와 ball 변수를 초기화한 뒤, for문을 이용하여 사용자가 입력한 숫자와 random 배열의 숫자를 비교합니다. 
사용자가 입력한 숫자와 random 배열의 숫자가 같은 경우 strike와 ball 변수를 갱신합니다.

게임이 종료될 때까지 위 과정을 반복하며, 게임 종료 조건은 다음과 같습니다.

사용자가 3개의 숫자를 모두 맞추었을 경우: strike가 3이면 정답입니다.
사용자가 MAX_CHANCE(5)번의 기회를 모두 사용했을 경우: 이 경우에는 게임 오버입니다.
위 조건에 따라 게임이 종료되면, 게임 오버일 경우 사용자가 입력한 숫자를 출력하고 정답을 알려주며, 정답일 경우 정답을 출력하고 게임을 종료합니다.

get_user_input() 함수에서는 사용자로부터 3개의 숫자를 입력받고, 중복된 숫자가 입력되었을 경우 오류 메시지를 출력합니다.

play_game() 함수에서는 사용자가 입력한 숫자와 random 배열의 숫자를 비교하여 strike와 ball 변수를 계산합니다. 
이때 중복이 있는 경우가 발생하면 out을 출력하고, strike와 ball의 값이 갱신된 경우 strike와 ball 값을 출력합니다. 
MAX_CHANCE(5)번의 기회를 모두 사용했을 경우 게임 오버 처리를 하고, 게임 종료 조건에 따라서 게임이 종료됩니다.

따라서 이 코드는 기본적인 숫자 맞추기 게임을 구현한 코드입니다.

main.c

이 코드는 C 프로그래밍 언어로 작성된 숫자 야구 게임입니다.

코드의 첫 부분에서는 time.h와 stdlib.h 라이브러리를 포함하고 있습니다. 이 라이브러리들은 랜덤 숫자를 생성하기 위해 사용됩니다.

game.h 파일에서 MAX_CHANCE와 get_user_input(), play_game() 함수를 호출합니다. 
MAX_CHANCE는 게임에서 사용자가 정답을 맞추기 위해 가진 기회의 최대 횟수를 의미합니다. 
get_user_input() 함수는 사용자로부터 3개의 숫자를 입력받고, 입력된 숫자가 중복되는지 확인합니다. 중복된 경우 다시 입력을 받습니다.
 play_game() 함수는 사용자가 입력한 3개의 숫자와 랜덤으로 생성된 3개의 숫자를 비교하고, 결과를 출력합니다.

main() 함수에서는 srand() 함수를 이용해 랜덤한 숫자를 생성하고, random[] 배열에 저장합니다. 
이 때, 중복된 숫자가 생성되지 않도록 for문을 이용해 중복을 체크합니다.
 그리고 chance, try_count, game_over, user[] 변수를 초기화하고, while 루프를 이용해 게임을 실행합니다. 
게임이 종료될 때까지 또는 사용자가 모든 기회를 소진할 때까지 사용자로부터 숫자를 입력받고, play_game() 함수를 호출합니다.
 game_over 변수가 1이 되면 while 루프를 빠져나가고, 결과를 출력합니다. 만약 chance가 0이 되면 게임을 종료하고, 정답을 출력합니다.

코드를 실행하면 사용자가 게임을 플레이할 수 있습니다. 사용자는 3개의 숫자를 입력하고, 프로그램은 입력된 숫자와 정답을 비교합니다. 
만약 입력된 숫자와 정답이 모두 일치하면 게임은 종료되고, 정답을 출력합니다. 
만약 일치하지 않으면 사용자는 다시 입력을 시도할 수 있고, 기회가 남아있는 동안 게임은 계속 진행됩니다. 
만약 기회를 모두 소진하면 게임은 종료되고, 정답을 출력합니다.

game.h

이 파일은 함수의 선언과 상수 정의가 들어있는 헤더 파일입니다.

MAX_CHANCE : 사용자가 정답을 맞추기 위한 기회의 최대 수를 정하는 상수입니다.

get_user_input(int user[]) : 사용자로부터 3개의 정수를 입력받는 함수입니다. user[] 배열에 숫자 3개를 입력받아 저장하며, 이때 중복된 숫자가 입력되는 경우 "중복, 다시 입력해주세요."라는 메시지를 출력합니다.

play_game(int random[], int user[], int* chance, int* try_count, int* game_over) : 게임의 메인 로직을 담고 있는 함수입니다. random[] 배열은 0~9까지의 난수로 이루어진 3개의 숫자를 저장하고 있습니다. user[] 배열은 사용자가 입력한 3개의 숫자를 저장하고 있습니다. chance는 게임에서 남은 시도 횟수를 저장하는 변수입니다. try_count는 게임에서 시도한 횟수를 저장하는 변수입니다. game_over는 게임이 종료되었는지 여부를 저장하는 변수입니다.

게임의 룰은 다음과 같습니다.

사용자가 3개의 숫자를 입력합니다.
입력한 숫자와 난수를 비교하여 스트라이크와 볼의 개수를 계산합니다.
만약 사용자가 정답을 맞췄다면 game_over를 1로 설정하고 게임을 종료합니다.
사용자가 입력한 숫자에 중복이 있는 경우 "중복, 다시 입력해주세요."라는 메시지를 출력하고 다시 1번부터 진행합니다.
스트라이크와 볼의 개수를 출력합니다. 만약 스트라이크가 0이고 볼도 0이라면 "아웃!"이라는 메시지를 출력하고 chance를 1 감소시킵니다. 그렇지 않으면 chance를 1 감소시키고 try_count를 1 증가시킵니다.
chance가 0이 되거나 game_over가 1이 되면 게임이 종료됩니다.